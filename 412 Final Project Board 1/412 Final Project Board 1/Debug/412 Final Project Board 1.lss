
412 Final Project Board 1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000004  00800100  000001e6  0000025a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000001e6  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  0000025e  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000290  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000098  00000000  00000000  000002d0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000010de  00000000  00000000  00000368  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000bc8  00000000  00000000  00001446  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000d78  00000000  00000000  0000200e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000f8  00000000  00000000  00002d88  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00010b51  00000000  00000000  00002e80  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000367  00000000  00000000  000139d1  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000a8  00000000  00000000  00013d38  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  00003f10  00000000  00000000  00013de0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	59 c0       	rjmp	.+178    	; 0xb4 <__ctors_end>
   2:	00 00       	nop
   4:	6a c0       	rjmp	.+212    	; 0xda <__bad_interrupt>
   6:	00 00       	nop
   8:	68 c0       	rjmp	.+208    	; 0xda <__bad_interrupt>
   a:	00 00       	nop
   c:	66 c0       	rjmp	.+204    	; 0xda <__bad_interrupt>
   e:	00 00       	nop
  10:	64 c0       	rjmp	.+200    	; 0xda <__bad_interrupt>
  12:	00 00       	nop
  14:	62 c0       	rjmp	.+196    	; 0xda <__bad_interrupt>
  16:	00 00       	nop
  18:	60 c0       	rjmp	.+192    	; 0xda <__bad_interrupt>
  1a:	00 00       	nop
  1c:	5e c0       	rjmp	.+188    	; 0xda <__bad_interrupt>
  1e:	00 00       	nop
  20:	5c c0       	rjmp	.+184    	; 0xda <__bad_interrupt>
  22:	00 00       	nop
  24:	5a c0       	rjmp	.+180    	; 0xda <__bad_interrupt>
  26:	00 00       	nop
  28:	58 c0       	rjmp	.+176    	; 0xda <__bad_interrupt>
  2a:	00 00       	nop
  2c:	56 c0       	rjmp	.+172    	; 0xda <__bad_interrupt>
  2e:	00 00       	nop
  30:	54 c0       	rjmp	.+168    	; 0xda <__bad_interrupt>
  32:	00 00       	nop
  34:	52 c0       	rjmp	.+164    	; 0xda <__bad_interrupt>
  36:	00 00       	nop
  38:	50 c0       	rjmp	.+160    	; 0xda <__bad_interrupt>
  3a:	00 00       	nop
  3c:	4e c0       	rjmp	.+156    	; 0xda <__bad_interrupt>
  3e:	00 00       	nop
  40:	4c c0       	rjmp	.+152    	; 0xda <__bad_interrupt>
  42:	00 00       	nop
  44:	4a c0       	rjmp	.+148    	; 0xda <__bad_interrupt>
  46:	00 00       	nop
  48:	48 c0       	rjmp	.+144    	; 0xda <__bad_interrupt>
  4a:	00 00       	nop
  4c:	46 c0       	rjmp	.+140    	; 0xda <__bad_interrupt>
  4e:	00 00       	nop
  50:	44 c0       	rjmp	.+136    	; 0xda <__bad_interrupt>
  52:	00 00       	nop
  54:	42 c0       	rjmp	.+132    	; 0xda <__bad_interrupt>
  56:	00 00       	nop
  58:	40 c0       	rjmp	.+128    	; 0xda <__bad_interrupt>
  5a:	00 00       	nop
  5c:	3e c0       	rjmp	.+124    	; 0xda <__bad_interrupt>
  5e:	00 00       	nop
  60:	3c c0       	rjmp	.+120    	; 0xda <__bad_interrupt>
  62:	00 00       	nop
  64:	3a c0       	rjmp	.+116    	; 0xda <__bad_interrupt>
  66:	00 00       	nop
  68:	38 c0       	rjmp	.+112    	; 0xda <__bad_interrupt>
  6a:	00 00       	nop
  6c:	36 c0       	rjmp	.+108    	; 0xda <__bad_interrupt>
  6e:	00 00       	nop
  70:	34 c0       	rjmp	.+104    	; 0xda <__bad_interrupt>
  72:	00 00       	nop
  74:	32 c0       	rjmp	.+100    	; 0xda <__bad_interrupt>
  76:	00 00       	nop
  78:	30 c0       	rjmp	.+96     	; 0xda <__bad_interrupt>
  7a:	00 00       	nop
  7c:	2e c0       	rjmp	.+92     	; 0xda <__bad_interrupt>
  7e:	00 00       	nop
  80:	2c c0       	rjmp	.+88     	; 0xda <__bad_interrupt>
  82:	00 00       	nop
  84:	2a c0       	rjmp	.+84     	; 0xda <__bad_interrupt>
  86:	00 00       	nop
  88:	28 c0       	rjmp	.+80     	; 0xda <__bad_interrupt>
  8a:	00 00       	nop
  8c:	26 c0       	rjmp	.+76     	; 0xda <__bad_interrupt>
  8e:	00 00       	nop
  90:	24 c0       	rjmp	.+72     	; 0xda <__bad_interrupt>
  92:	00 00       	nop
  94:	22 c0       	rjmp	.+68     	; 0xda <__bad_interrupt>
  96:	00 00       	nop
  98:	20 c0       	rjmp	.+64     	; 0xda <__bad_interrupt>
  9a:	00 00       	nop
  9c:	1e c0       	rjmp	.+60     	; 0xda <__bad_interrupt>
  9e:	00 00       	nop
  a0:	1c c0       	rjmp	.+56     	; 0xda <__bad_interrupt>
  a2:	00 00       	nop
  a4:	1a c0       	rjmp	.+52     	; 0xda <__bad_interrupt>
  a6:	00 00       	nop
  a8:	18 c0       	rjmp	.+48     	; 0xda <__bad_interrupt>
  aa:	00 00       	nop
  ac:	16 c0       	rjmp	.+44     	; 0xda <__bad_interrupt>
  ae:	00 00       	nop
  b0:	14 c0       	rjmp	.+40     	; 0xda <__bad_interrupt>
	...

000000b4 <__ctors_end>:
  b4:	11 24       	eor	r1, r1
  b6:	1f be       	out	0x3f, r1	; 63
  b8:	cf ef       	ldi	r28, 0xFF	; 255
  ba:	d8 e0       	ldi	r29, 0x08	; 8
  bc:	de bf       	out	0x3e, r29	; 62
  be:	cd bf       	out	0x3d, r28	; 61

000000c0 <__do_copy_data>:
  c0:	11 e0       	ldi	r17, 0x01	; 1
  c2:	a0 e0       	ldi	r26, 0x00	; 0
  c4:	b1 e0       	ldi	r27, 0x01	; 1
  c6:	e6 ee       	ldi	r30, 0xE6	; 230
  c8:	f1 e0       	ldi	r31, 0x01	; 1
  ca:	02 c0       	rjmp	.+4      	; 0xd0 <__do_copy_data+0x10>
  cc:	05 90       	lpm	r0, Z+
  ce:	0d 92       	st	X+, r0
  d0:	a4 30       	cpi	r26, 0x04	; 4
  d2:	b1 07       	cpc	r27, r17
  d4:	d9 f7       	brne	.-10     	; 0xcc <__do_copy_data+0xc>
  d6:	7f d0       	rcall	.+254    	; 0x1d6 <main>
  d8:	84 c0       	rjmp	.+264    	; 0x1e2 <_exit>

000000da <__bad_interrupt>:
  da:	92 cf       	rjmp	.-220    	; 0x0 <__vectors>

000000dc <board_init>:
		port_pin_flags_t flags)
{
	/* Select direction and initial pin state */
	if (flags & IOPORT_DIR_OUTPUT) {
		if (flags & IOPORT_INIT_HIGH) {
			*((uint8_t *)port + 2) |= pin_mask;
  dc:	95 b1       	in	r25, 0x05	; 5
			*((uint8_t *)port + 2) &= ~pin_mask;
		}

		*((uint8_t *)port + 1) |= pin_mask;
	} else {
		*((uint8_t *)port + 1) &= ~pin_mask;
  de:	84 b1       	in	r24, 0x04	; 4
  e0:	80 62       	ori	r24, 0x20	; 32
  e2:	8f 77       	andi	r24, 0x7F	; 127
  e4:	84 b9       	out	0x04, r24	; 4
		if (flags & IOPORT_PULL_UP) {
			*((uint8_t *)port + 2) |= pin_mask;
  e6:	89 2f       	mov	r24, r25
  e8:	80 6a       	ori	r24, 0xA0	; 160
  ea:	85 b9       	out	0x05, r24	; 5
  ec:	08 95       	ret

000000ee <flash_led_short>:

void launch_game(void) {
	while(true) {
		
		long message = 0;
		USART_Communicate_Boardstate(message);
  ee:	8f ef       	ldi	r24, 0xFF	; 255
  f0:	84 b9       	out	0x04, r24	; 4
  f2:	85 b9       	out	0x05, r24	; 5
  f4:	2f e3       	ldi	r18, 0x3F	; 63
  f6:	32 e4       	ldi	r19, 0x42	; 66
  f8:	9f e0       	ldi	r25, 0x0F	; 15
  fa:	21 50       	subi	r18, 0x01	; 1
  fc:	30 40       	sbci	r19, 0x00	; 0
  fe:	90 40       	sbci	r25, 0x00	; 0
 100:	e1 f7       	brne	.-8      	; 0xfa <flash_led_short+0xc>
 102:	00 c0       	rjmp	.+0      	; 0x104 <flash_led_short+0x16>
 104:	00 00       	nop
 106:	15 b8       	out	0x05, r1	; 5
 108:	2f e3       	ldi	r18, 0x3F	; 63
 10a:	32 e4       	ldi	r19, 0x42	; 66
 10c:	9f e0       	ldi	r25, 0x0F	; 15
 10e:	21 50       	subi	r18, 0x01	; 1
 110:	30 40       	sbci	r19, 0x00	; 0
 112:	90 40       	sbci	r25, 0x00	; 0
 114:	e1 f7       	brne	.-8      	; 0x10e <flash_led_short+0x20>
 116:	00 c0       	rjmp	.+0      	; 0x118 <flash_led_short+0x2a>
 118:	00 00       	nop
 11a:	85 b9       	out	0x05, r24	; 5
 11c:	2f e3       	ldi	r18, 0x3F	; 63
 11e:	32 e4       	ldi	r19, 0x42	; 66
 120:	8f e0       	ldi	r24, 0x0F	; 15
 122:	21 50       	subi	r18, 0x01	; 1
 124:	30 40       	sbci	r19, 0x00	; 0
 126:	80 40       	sbci	r24, 0x00	; 0
 128:	e1 f7       	brne	.-8      	; 0x122 <flash_led_short+0x34>
 12a:	00 c0       	rjmp	.+0      	; 0x12c <flash_led_short+0x3e>
 12c:	00 00       	nop
 12e:	15 b8       	out	0x05, r1	; 5
 130:	9f e3       	ldi	r25, 0x3F	; 63
 132:	22 e4       	ldi	r18, 0x42	; 66
 134:	3f e0       	ldi	r19, 0x0F	; 15
 136:	91 50       	subi	r25, 0x01	; 1
 138:	20 40       	sbci	r18, 0x00	; 0
 13a:	30 40       	sbci	r19, 0x00	; 0
 13c:	e1 f7       	brne	.-8      	; 0x136 <flash_led_short+0x48>
 13e:	00 c0       	rjmp	.+0      	; 0x140 <flash_led_short+0x52>
 140:	00 00       	nop
 142:	08 95       	ret

00000144 <USART_Init>:
 144:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
 148:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
 14c:	88 e1       	ldi	r24, 0x18	; 24
 14e:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
 152:	8e e0       	ldi	r24, 0x0E	; 14
 154:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
 158:	08 95       	ret

0000015a <USART_Transmit>:
 15a:	e0 ec       	ldi	r30, 0xC0	; 192
 15c:	f0 e0       	ldi	r31, 0x00	; 0
 15e:	90 81       	ld	r25, Z
 160:	95 ff       	sbrs	r25, 5
 162:	fd cf       	rjmp	.-6      	; 0x15e <USART_Transmit+0x4>
 164:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
 168:	08 95       	ret

0000016a <USART_Receive>:
 16a:	e0 ec       	ldi	r30, 0xC0	; 192
 16c:	f0 e0       	ldi	r31, 0x00	; 0
 16e:	80 81       	ld	r24, Z
 170:	88 23       	and	r24, r24
 172:	ec f7       	brge	.-6      	; 0x16e <USART_Receive+0x4>
 174:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
 178:	08 95       	ret

0000017a <Split_Long>:
 17a:	60 93 03 01 	sts	0x0103, r22	; 0x800103 <P1>
 17e:	70 93 02 01 	sts	0x0102, r23	; 0x800102 <P2>
 182:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <P3>
 186:	90 93 00 01 	sts	0x0100, r25	; 0x800100 <P4>
 18a:	08 95       	ret

0000018c <USART_Communicate_Boardstate>:
 18c:	10 92 03 01 	sts	0x0103, r1	; 0x800103 <P1>
 190:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <P2>
 194:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <P3>
 198:	f0 df       	rcall	.-32     	; 0x17a <Split_Long>
 19a:	80 91 03 01 	lds	r24, 0x0103	; 0x800103 <P1>
 19e:	80 35       	cpi	r24, 0x50	; 80
 1a0:	49 f4       	brne	.+18     	; 0x1b4 <USART_Communicate_Boardstate+0x28>
 1a2:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <P2>
 1a6:	89 36       	cpi	r24, 0x69	; 105
 1a8:	29 f4       	brne	.+10     	; 0x1b4 <USART_Communicate_Boardstate+0x28>
 1aa:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <P3>
 1ae:	80 36       	cpi	r24, 0x60	; 96
 1b0:	09 f4       	brne	.+2      	; 0x1b4 <USART_Communicate_Boardstate+0x28>
 1b2:	9d df       	rcall	.-198    	; 0xee <flash_led_short>
 1b4:	da df       	rcall	.-76     	; 0x16a <USART_Receive>
 1b6:	80 91 03 01 	lds	r24, 0x0103	; 0x800103 <P1>
 1ba:	cf df       	rcall	.-98     	; 0x15a <USART_Transmit>
 1bc:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <P2>
 1c0:	cc df       	rcall	.-104    	; 0x15a <USART_Transmit>
 1c2:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <P3>
 1c6:	c9 cf       	rjmp	.-110    	; 0x15a <USART_Transmit>
 1c8:	08 95       	ret

000001ca <test_USART>:
	}
}

void test_USART() {
	while(true) {
	USART_Communicate_Boardstate(6318416);
 1ca:	60 e5       	ldi	r22, 0x50	; 80
 1cc:	79 e6       	ldi	r23, 0x69	; 105
 1ce:	80 e6       	ldi	r24, 0x60	; 96
 1d0:	90 e0       	ldi	r25, 0x00	; 0
 1d2:	dc df       	rcall	.-72     	; 0x18c <USART_Communicate_Boardstate>
 1d4:	fa cf       	rjmp	.-12     	; 0x1ca <test_USART>

000001d6 <main>:

int main (void)
{
	/* Insert system clock initialization code here (sysclk_init()). */

	board_init();	
 1d6:	82 df       	rcall	.-252    	; 0xdc <board_init>
	USART_Init(MYUBRR);
 1d8:	8b e0       	ldi	r24, 0x0B	; 11
 1da:	90 e0       	ldi	r25, 0x00	; 0
	flash_led_short();
 1dc:	b3 df       	rcall	.-154    	; 0x144 <USART_Init>
 1de:	87 df       	rcall	.-242    	; 0xee <flash_led_short>

	test_USART();
 1e0:	f4 df       	rcall	.-24     	; 0x1ca <test_USART>

000001e2 <_exit>:
 1e2:	f8 94       	cli

000001e4 <__stop_program>:
 1e4:	ff cf       	rjmp	.-2      	; 0x1e4 <__stop_program>
