
412 Final Project Board 1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000208  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000194  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000002  00800100  00800100  00000208  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000208  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000238  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000f8  00000000  00000000  00000278  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001a6a  00000000  00000000  00000370  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000c99  00000000  00000000  00001dda  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000010c7  00000000  00000000  00002a73  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002e0  00000000  00000000  00003b3c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00011257  00000000  00000000  00003e1c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000fae  00000000  00000000  00015073  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000108  00000000  00000000  00016021  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  00004090  00000000  00000000  00016129  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	59 c0       	rjmp	.+178    	; 0xb4 <__ctors_end>
   2:	00 00       	nop
   4:	72 c0       	rjmp	.+228    	; 0xea <__bad_interrupt>
   6:	00 00       	nop
   8:	70 c0       	rjmp	.+224    	; 0xea <__bad_interrupt>
   a:	00 00       	nop
   c:	6e c0       	rjmp	.+220    	; 0xea <__bad_interrupt>
   e:	00 00       	nop
  10:	6c c0       	rjmp	.+216    	; 0xea <__bad_interrupt>
  12:	00 00       	nop
  14:	6a c0       	rjmp	.+212    	; 0xea <__bad_interrupt>
  16:	00 00       	nop
  18:	68 c0       	rjmp	.+208    	; 0xea <__bad_interrupt>
  1a:	00 00       	nop
  1c:	66 c0       	rjmp	.+204    	; 0xea <__bad_interrupt>
  1e:	00 00       	nop
  20:	64 c0       	rjmp	.+200    	; 0xea <__bad_interrupt>
  22:	00 00       	nop
  24:	62 c0       	rjmp	.+196    	; 0xea <__bad_interrupt>
  26:	00 00       	nop
  28:	60 c0       	rjmp	.+192    	; 0xea <__bad_interrupt>
  2a:	00 00       	nop
  2c:	5e c0       	rjmp	.+188    	; 0xea <__bad_interrupt>
  2e:	00 00       	nop
  30:	5c c0       	rjmp	.+184    	; 0xea <__bad_interrupt>
  32:	00 00       	nop
  34:	5a c0       	rjmp	.+180    	; 0xea <__bad_interrupt>
  36:	00 00       	nop
  38:	58 c0       	rjmp	.+176    	; 0xea <__bad_interrupt>
  3a:	00 00       	nop
  3c:	56 c0       	rjmp	.+172    	; 0xea <__bad_interrupt>
  3e:	00 00       	nop
  40:	54 c0       	rjmp	.+168    	; 0xea <__bad_interrupt>
  42:	00 00       	nop
  44:	52 c0       	rjmp	.+164    	; 0xea <__bad_interrupt>
  46:	00 00       	nop
  48:	50 c0       	rjmp	.+160    	; 0xea <__bad_interrupt>
  4a:	00 00       	nop
  4c:	4e c0       	rjmp	.+156    	; 0xea <__bad_interrupt>
  4e:	00 00       	nop
  50:	4c c0       	rjmp	.+152    	; 0xea <__bad_interrupt>
  52:	00 00       	nop
  54:	4a c0       	rjmp	.+148    	; 0xea <__bad_interrupt>
  56:	00 00       	nop
  58:	48 c0       	rjmp	.+144    	; 0xea <__bad_interrupt>
  5a:	00 00       	nop
  5c:	46 c0       	rjmp	.+140    	; 0xea <__bad_interrupt>
  5e:	00 00       	nop
  60:	44 c0       	rjmp	.+136    	; 0xea <__bad_interrupt>
  62:	00 00       	nop
  64:	42 c0       	rjmp	.+132    	; 0xea <__bad_interrupt>
  66:	00 00       	nop
  68:	40 c0       	rjmp	.+128    	; 0xea <__bad_interrupt>
  6a:	00 00       	nop
  6c:	3e c0       	rjmp	.+124    	; 0xea <__bad_interrupt>
  6e:	00 00       	nop
  70:	3c c0       	rjmp	.+120    	; 0xea <__bad_interrupt>
  72:	00 00       	nop
  74:	3a c0       	rjmp	.+116    	; 0xea <__bad_interrupt>
  76:	00 00       	nop
  78:	38 c0       	rjmp	.+112    	; 0xea <__bad_interrupt>
  7a:	00 00       	nop
  7c:	36 c0       	rjmp	.+108    	; 0xea <__bad_interrupt>
  7e:	00 00       	nop
  80:	34 c0       	rjmp	.+104    	; 0xea <__bad_interrupt>
  82:	00 00       	nop
  84:	32 c0       	rjmp	.+100    	; 0xea <__bad_interrupt>
  86:	00 00       	nop
  88:	30 c0       	rjmp	.+96     	; 0xea <__bad_interrupt>
  8a:	00 00       	nop
  8c:	2e c0       	rjmp	.+92     	; 0xea <__bad_interrupt>
  8e:	00 00       	nop
  90:	2c c0       	rjmp	.+88     	; 0xea <__bad_interrupt>
  92:	00 00       	nop
  94:	2a c0       	rjmp	.+84     	; 0xea <__bad_interrupt>
  96:	00 00       	nop
  98:	28 c0       	rjmp	.+80     	; 0xea <__bad_interrupt>
  9a:	00 00       	nop
  9c:	26 c0       	rjmp	.+76     	; 0xea <__bad_interrupt>
  9e:	00 00       	nop
  a0:	24 c0       	rjmp	.+72     	; 0xea <__bad_interrupt>
  a2:	00 00       	nop
  a4:	22 c0       	rjmp	.+68     	; 0xea <__bad_interrupt>
  a6:	00 00       	nop
  a8:	20 c0       	rjmp	.+64     	; 0xea <__bad_interrupt>
  aa:	00 00       	nop
  ac:	1e c0       	rjmp	.+60     	; 0xea <__bad_interrupt>
  ae:	00 00       	nop
  b0:	1c c0       	rjmp	.+56     	; 0xea <__bad_interrupt>
	...

000000b4 <__ctors_end>:
  b4:	11 24       	eor	r1, r1
  b6:	1f be       	out	0x3f, r1	; 63
  b8:	cf ef       	ldi	r28, 0xFF	; 255
  ba:	d8 e0       	ldi	r29, 0x08	; 8
  bc:	de bf       	out	0x3e, r29	; 62
  be:	cd bf       	out	0x3d, r28	; 61

000000c0 <__do_copy_data>:
  c0:	11 e0       	ldi	r17, 0x01	; 1
  c2:	a0 e0       	ldi	r26, 0x00	; 0
  c4:	b1 e0       	ldi	r27, 0x01	; 1
  c6:	e4 e9       	ldi	r30, 0x94	; 148
  c8:	f1 e0       	ldi	r31, 0x01	; 1
  ca:	02 c0       	rjmp	.+4      	; 0xd0 <__do_copy_data+0x10>
  cc:	05 90       	lpm	r0, Z+
  ce:	0d 92       	st	X+, r0
  d0:	a0 30       	cpi	r26, 0x00	; 0
  d2:	b1 07       	cpc	r27, r17
  d4:	d9 f7       	brne	.-10     	; 0xcc <__do_copy_data+0xc>

000000d6 <__do_clear_bss>:
  d6:	21 e0       	ldi	r18, 0x01	; 1
  d8:	a0 e0       	ldi	r26, 0x00	; 0
  da:	b1 e0       	ldi	r27, 0x01	; 1
  dc:	01 c0       	rjmp	.+2      	; 0xe0 <.do_clear_bss_start>

000000de <.do_clear_bss_loop>:
  de:	1d 92       	st	X+, r1

000000e0 <.do_clear_bss_start>:
  e0:	a2 30       	cpi	r26, 0x02	; 2
  e2:	b2 07       	cpc	r27, r18
  e4:	e1 f7       	brne	.-8      	; 0xde <.do_clear_bss_loop>
  e6:	4c d0       	rcall	.+152    	; 0x180 <main>
  e8:	53 c0       	rjmp	.+166    	; 0x190 <_exit>

000000ea <__bad_interrupt>:
  ea:	8a cf       	rjmp	.-236    	; 0x0 <__vectors>

000000ec <board_init>:
		port_pin_flags_t flags)
{
	/* Select direction and initial pin state */
	if (flags & IOPORT_DIR_OUTPUT) {
		if (flags & IOPORT_INIT_HIGH) {
			*((uint8_t *)port + 2) |= pin_mask;
  ec:	95 b1       	in	r25, 0x05	; 5
			*((uint8_t *)port + 2) &= ~pin_mask;
		}

		*((uint8_t *)port + 1) |= pin_mask;
	} else {
		*((uint8_t *)port + 1) &= ~pin_mask;
  ee:	84 b1       	in	r24, 0x04	; 4
  f0:	80 62       	ori	r24, 0x20	; 32
  f2:	8f 77       	andi	r24, 0x7F	; 127
  f4:	84 b9       	out	0x04, r24	; 4
		if (flags & IOPORT_PULL_UP) {
			*((uint8_t *)port + 2) |= pin_mask;
  f6:	89 2f       	mov	r24, r25
  f8:	80 6a       	ori	r24, 0xA0	; 160
  fa:	85 b9       	out	0x05, r24	; 5
  fc:	08 95       	ret

000000fe <flash_led_short>:
	
	while(true) {
		
		unsigned long message = allmovesinorder[(moveloop % 18)];		
		USART_Communicate_Boardstate(message);
		moveloop++;
  fe:	8f ef       	ldi	r24, 0xFF	; 255
 100:	84 b9       	out	0x04, r24	; 4
 102:	87 b9       	out	0x07, r24	; 7
 104:	85 b9       	out	0x05, r24	; 5
 106:	2f e3       	ldi	r18, 0x3F	; 63
 108:	32 e4       	ldi	r19, 0x42	; 66
 10a:	9f e0       	ldi	r25, 0x0F	; 15
 10c:	21 50       	subi	r18, 0x01	; 1
 10e:	30 40       	sbci	r19, 0x00	; 0
 110:	90 40       	sbci	r25, 0x00	; 0
 112:	e1 f7       	brne	.-8      	; 0x10c <flash_led_short+0xe>
 114:	00 c0       	rjmp	.+0      	; 0x116 <flash_led_short+0x18>
 116:	00 00       	nop
 118:	15 b8       	out	0x05, r1	; 5
 11a:	2f e3       	ldi	r18, 0x3F	; 63
 11c:	32 e4       	ldi	r19, 0x42	; 66
 11e:	9f e0       	ldi	r25, 0x0F	; 15
 120:	21 50       	subi	r18, 0x01	; 1
 122:	30 40       	sbci	r19, 0x00	; 0
 124:	90 40       	sbci	r25, 0x00	; 0
 126:	e1 f7       	brne	.-8      	; 0x120 <flash_led_short+0x22>
 128:	00 c0       	rjmp	.+0      	; 0x12a <flash_led_short+0x2c>
 12a:	00 00       	nop
 12c:	85 b9       	out	0x05, r24	; 5
 12e:	2f e3       	ldi	r18, 0x3F	; 63
 130:	32 e4       	ldi	r19, 0x42	; 66
 132:	8f e0       	ldi	r24, 0x0F	; 15
 134:	21 50       	subi	r18, 0x01	; 1
 136:	30 40       	sbci	r19, 0x00	; 0
 138:	80 40       	sbci	r24, 0x00	; 0
 13a:	e1 f7       	brne	.-8      	; 0x134 <flash_led_short+0x36>
 13c:	00 c0       	rjmp	.+0      	; 0x13e <flash_led_short+0x40>
 13e:	00 00       	nop
 140:	15 b8       	out	0x05, r1	; 5
 142:	9f e3       	ldi	r25, 0x3F	; 63
 144:	22 e4       	ldi	r18, 0x42	; 66
 146:	3f e0       	ldi	r19, 0x0F	; 15
 148:	91 50       	subi	r25, 0x01	; 1
 14a:	20 40       	sbci	r18, 0x00	; 0
 14c:	30 40       	sbci	r19, 0x00	; 0
 14e:	e1 f7       	brne	.-8      	; 0x148 <flash_led_short+0x4a>
 150:	00 c0       	rjmp	.+0      	; 0x152 <flash_led_short+0x54>
 152:	00 00       	nop
 154:	18 b8       	out	0x08, r1	; 8
 156:	08 95       	ret

00000158 <USART_Init>:
 158:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
 15c:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
 160:	88 e1       	ldi	r24, 0x18	; 24
 162:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
 166:	8e e0       	ldi	r24, 0x0E	; 14
 168:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
 16c:	08 95       	ret

0000016e <collect_move>:
 16e:	83 b1       	in	r24, 0x03	; 3
 170:	8f 73       	andi	r24, 0x3F	; 63
 172:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <PBInput>
 176:	86 b1       	in	r24, 0x06	; 6
 178:	83 72       	andi	r24, 0x23	; 35
 17a:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_end>
 17e:	f7 cf       	rjmp	.-18     	; 0x16e <collect_move>

00000180 <main>:

int main (void)
{
	/* Insert system clock initialization code here (sysclk_init()). */

	board_init();	
 180:	b5 df       	rcall	.-150    	; 0xec <board_init>
	USART_Init(MYUBRR);
 182:	8b e0       	ldi	r24, 0x0B	; 11
 184:	90 e0       	ldi	r25, 0x00	; 0
	flash_led_short();
 186:	e8 df       	rcall	.-48     	; 0x158 <USART_Init>

	//launch_game();
	
	collect_move(0);
 188:	ba df       	rcall	.-140    	; 0xfe <flash_led_short>
 18a:	80 e0       	ldi	r24, 0x00	; 0
 18c:	90 e0       	ldi	r25, 0x00	; 0
 18e:	ef df       	rcall	.-34     	; 0x16e <collect_move>

00000190 <_exit>:
 190:	f8 94       	cli

00000192 <__stop_program>:
 192:	ff cf       	rjmp	.-2      	; 0x192 <__stop_program>
