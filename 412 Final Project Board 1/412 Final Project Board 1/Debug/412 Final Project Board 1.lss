
412 Final Project Board 1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000294  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000220  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000004  00800100  00800100  00000294  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000294  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000002c4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000f8  00000000  00000000  00000304  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000018ad  00000000  00000000  000003fc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000c69  00000000  00000000  00001ca9  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001062  00000000  00000000  00002912  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002e0  00000000  00000000  00003974  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00011262  00000000  00000000  00003c54  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000c16  00000000  00000000  00014eb6  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000108  00000000  00000000  00015acc  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  00004090  00000000  00000000  00015bd4  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	59 c0       	rjmp	.+178    	; 0xb4 <__ctors_end>
   2:	00 00       	nop
   4:	72 c0       	rjmp	.+228    	; 0xea <__bad_interrupt>
   6:	00 00       	nop
   8:	70 c0       	rjmp	.+224    	; 0xea <__bad_interrupt>
   a:	00 00       	nop
   c:	6e c0       	rjmp	.+220    	; 0xea <__bad_interrupt>
   e:	00 00       	nop
  10:	6c c0       	rjmp	.+216    	; 0xea <__bad_interrupt>
  12:	00 00       	nop
  14:	6a c0       	rjmp	.+212    	; 0xea <__bad_interrupt>
  16:	00 00       	nop
  18:	68 c0       	rjmp	.+208    	; 0xea <__bad_interrupt>
  1a:	00 00       	nop
  1c:	66 c0       	rjmp	.+204    	; 0xea <__bad_interrupt>
  1e:	00 00       	nop
  20:	64 c0       	rjmp	.+200    	; 0xea <__bad_interrupt>
  22:	00 00       	nop
  24:	62 c0       	rjmp	.+196    	; 0xea <__bad_interrupt>
  26:	00 00       	nop
  28:	60 c0       	rjmp	.+192    	; 0xea <__bad_interrupt>
  2a:	00 00       	nop
  2c:	5e c0       	rjmp	.+188    	; 0xea <__bad_interrupt>
  2e:	00 00       	nop
  30:	5c c0       	rjmp	.+184    	; 0xea <__bad_interrupt>
  32:	00 00       	nop
  34:	5a c0       	rjmp	.+180    	; 0xea <__bad_interrupt>
  36:	00 00       	nop
  38:	58 c0       	rjmp	.+176    	; 0xea <__bad_interrupt>
  3a:	00 00       	nop
  3c:	56 c0       	rjmp	.+172    	; 0xea <__bad_interrupt>
  3e:	00 00       	nop
  40:	54 c0       	rjmp	.+168    	; 0xea <__bad_interrupt>
  42:	00 00       	nop
  44:	52 c0       	rjmp	.+164    	; 0xea <__bad_interrupt>
  46:	00 00       	nop
  48:	50 c0       	rjmp	.+160    	; 0xea <__bad_interrupt>
  4a:	00 00       	nop
  4c:	4e c0       	rjmp	.+156    	; 0xea <__bad_interrupt>
  4e:	00 00       	nop
  50:	4c c0       	rjmp	.+152    	; 0xea <__bad_interrupt>
  52:	00 00       	nop
  54:	4a c0       	rjmp	.+148    	; 0xea <__bad_interrupt>
  56:	00 00       	nop
  58:	48 c0       	rjmp	.+144    	; 0xea <__bad_interrupt>
  5a:	00 00       	nop
  5c:	46 c0       	rjmp	.+140    	; 0xea <__bad_interrupt>
  5e:	00 00       	nop
  60:	44 c0       	rjmp	.+136    	; 0xea <__bad_interrupt>
  62:	00 00       	nop
  64:	42 c0       	rjmp	.+132    	; 0xea <__bad_interrupt>
  66:	00 00       	nop
  68:	40 c0       	rjmp	.+128    	; 0xea <__bad_interrupt>
  6a:	00 00       	nop
  6c:	3e c0       	rjmp	.+124    	; 0xea <__bad_interrupt>
  6e:	00 00       	nop
  70:	3c c0       	rjmp	.+120    	; 0xea <__bad_interrupt>
  72:	00 00       	nop
  74:	3a c0       	rjmp	.+116    	; 0xea <__bad_interrupt>
  76:	00 00       	nop
  78:	38 c0       	rjmp	.+112    	; 0xea <__bad_interrupt>
  7a:	00 00       	nop
  7c:	36 c0       	rjmp	.+108    	; 0xea <__bad_interrupt>
  7e:	00 00       	nop
  80:	34 c0       	rjmp	.+104    	; 0xea <__bad_interrupt>
  82:	00 00       	nop
  84:	32 c0       	rjmp	.+100    	; 0xea <__bad_interrupt>
  86:	00 00       	nop
  88:	30 c0       	rjmp	.+96     	; 0xea <__bad_interrupt>
  8a:	00 00       	nop
  8c:	2e c0       	rjmp	.+92     	; 0xea <__bad_interrupt>
  8e:	00 00       	nop
  90:	2c c0       	rjmp	.+88     	; 0xea <__bad_interrupt>
  92:	00 00       	nop
  94:	2a c0       	rjmp	.+84     	; 0xea <__bad_interrupt>
  96:	00 00       	nop
  98:	28 c0       	rjmp	.+80     	; 0xea <__bad_interrupt>
  9a:	00 00       	nop
  9c:	26 c0       	rjmp	.+76     	; 0xea <__bad_interrupt>
  9e:	00 00       	nop
  a0:	24 c0       	rjmp	.+72     	; 0xea <__bad_interrupt>
  a2:	00 00       	nop
  a4:	22 c0       	rjmp	.+68     	; 0xea <__bad_interrupt>
  a6:	00 00       	nop
  a8:	20 c0       	rjmp	.+64     	; 0xea <__bad_interrupt>
  aa:	00 00       	nop
  ac:	1e c0       	rjmp	.+60     	; 0xea <__bad_interrupt>
  ae:	00 00       	nop
  b0:	1c c0       	rjmp	.+56     	; 0xea <__bad_interrupt>
	...

000000b4 <__ctors_end>:
  b4:	11 24       	eor	r1, r1
  b6:	1f be       	out	0x3f, r1	; 63
  b8:	cf ef       	ldi	r28, 0xFF	; 255
  ba:	d8 e0       	ldi	r29, 0x08	; 8
  bc:	de bf       	out	0x3e, r29	; 62
  be:	cd bf       	out	0x3d, r28	; 61

000000c0 <__do_copy_data>:
  c0:	11 e0       	ldi	r17, 0x01	; 1
  c2:	a0 e0       	ldi	r26, 0x00	; 0
  c4:	b1 e0       	ldi	r27, 0x01	; 1
  c6:	e0 e2       	ldi	r30, 0x20	; 32
  c8:	f2 e0       	ldi	r31, 0x02	; 2
  ca:	02 c0       	rjmp	.+4      	; 0xd0 <__do_copy_data+0x10>
  cc:	05 90       	lpm	r0, Z+
  ce:	0d 92       	st	X+, r0
  d0:	a0 30       	cpi	r26, 0x00	; 0
  d2:	b1 07       	cpc	r27, r17
  d4:	d9 f7       	brne	.-10     	; 0xcc <__do_copy_data+0xc>

000000d6 <__do_clear_bss>:
  d6:	21 e0       	ldi	r18, 0x01	; 1
  d8:	a0 e0       	ldi	r26, 0x00	; 0
  da:	b1 e0       	ldi	r27, 0x01	; 1
  dc:	01 c0       	rjmp	.+2      	; 0xe0 <.do_clear_bss_start>

000000de <.do_clear_bss_loop>:
  de:	1d 92       	st	X+, r1

000000e0 <.do_clear_bss_start>:
  e0:	a4 30       	cpi	r26, 0x04	; 4
  e2:	b2 07       	cpc	r27, r18
  e4:	e1 f7       	brne	.-8      	; 0xde <.do_clear_bss_loop>
  e6:	92 d0       	rcall	.+292    	; 0x20c <main>
  e8:	99 c0       	rjmp	.+306    	; 0x21c <_exit>

000000ea <__bad_interrupt>:
  ea:	8a cf       	rjmp	.-236    	; 0x0 <__vectors>

000000ec <board_init>:
		port_pin_flags_t flags)
{
	/* Select direction and initial pin state */
	if (flags & IOPORT_DIR_OUTPUT) {
		if (flags & IOPORT_INIT_HIGH) {
			*((uint8_t *)port + 2) |= pin_mask;
  ec:	95 b1       	in	r25, 0x05	; 5
			*((uint8_t *)port + 2) &= ~pin_mask;
		}

		*((uint8_t *)port + 1) |= pin_mask;
	} else {
		*((uint8_t *)port + 1) &= ~pin_mask;
  ee:	84 b1       	in	r24, 0x04	; 4
  f0:	80 62       	ori	r24, 0x20	; 32
  f2:	8f 77       	andi	r24, 0x7F	; 127
  f4:	84 b9       	out	0x04, r24	; 4
		if (flags & IOPORT_PULL_UP) {
			*((uint8_t *)port + 2) |= pin_mask;
  f6:	89 2f       	mov	r24, r25
  f8:	80 6a       	ori	r24, 0xA0	; 160
  fa:	85 b9       	out	0x05, r24	; 5
  fc:	08 95       	ret

000000fe <add_move>:
	
	while(true) {
		
		unsigned long message = allmovesinorder[(moveloop % 18)];		
		USART_Communicate_Boardstate(message);
		moveloop++;
  fe:	cf 92       	push	r12
 100:	df 92       	push	r13
 102:	ef 92       	push	r14
 104:	ff 92       	push	r15
 106:	0f 93       	push	r16
 108:	1f 93       	push	r17
 10a:	00 91 00 01 	lds	r16, 0x0100	; 0x800100 <__data_end>
 10e:	10 91 01 01 	lds	r17, 0x0101	; 0x800101 <__data_end+0x1>
 112:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__data_end+0x2>
 116:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__data_end+0x3>
 11a:	68 01       	movw	r12, r16
 11c:	79 01       	movw	r14, r18
 11e:	c6 22       	and	r12, r22
 120:	d7 22       	and	r13, r23
 122:	e8 22       	and	r14, r24
 124:	f9 22       	and	r15, r25
 126:	ca 94       	dec	r12
 128:	cd 28       	or	r12, r13
 12a:	ce 28       	or	r12, r14
 12c:	cf 28       	or	r12, r15
 12e:	71 f0       	breq	.+28     	; 0x14c <add_move+0x4e>
 130:	dc 01       	movw	r26, r24
 132:	cb 01       	movw	r24, r22
 134:	80 0f       	add	r24, r16
 136:	91 1f       	adc	r25, r17
 138:	a2 1f       	adc	r26, r18
 13a:	b3 1f       	adc	r27, r19
 13c:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_end>
 140:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_end+0x1>
 144:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <__data_end+0x2>
 148:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <__data_end+0x3>
 14c:	1f 91       	pop	r17
 14e:	0f 91       	pop	r16
 150:	ff 90       	pop	r15
 152:	ef 90       	pop	r14
 154:	df 90       	pop	r13
 156:	cf 90       	pop	r12
 158:	08 95       	ret

0000015a <flash_led_short>:
 15a:	8f ef       	ldi	r24, 0xFF	; 255
 15c:	84 b9       	out	0x04, r24	; 4
 15e:	85 b9       	out	0x05, r24	; 5
 160:	2f e3       	ldi	r18, 0x3F	; 63
 162:	32 e4       	ldi	r19, 0x42	; 66
 164:	9f e0       	ldi	r25, 0x0F	; 15
 166:	21 50       	subi	r18, 0x01	; 1
 168:	30 40       	sbci	r19, 0x00	; 0
 16a:	90 40       	sbci	r25, 0x00	; 0
 16c:	e1 f7       	brne	.-8      	; 0x166 <flash_led_short+0xc>
 16e:	00 c0       	rjmp	.+0      	; 0x170 <flash_led_short+0x16>
 170:	00 00       	nop
 172:	15 b8       	out	0x05, r1	; 5
 174:	2f e3       	ldi	r18, 0x3F	; 63
 176:	32 e4       	ldi	r19, 0x42	; 66
 178:	9f e0       	ldi	r25, 0x0F	; 15
 17a:	21 50       	subi	r18, 0x01	; 1
 17c:	30 40       	sbci	r19, 0x00	; 0
 17e:	90 40       	sbci	r25, 0x00	; 0
 180:	e1 f7       	brne	.-8      	; 0x17a <flash_led_short+0x20>
 182:	00 c0       	rjmp	.+0      	; 0x184 <flash_led_short+0x2a>
 184:	00 00       	nop
 186:	85 b9       	out	0x05, r24	; 5
 188:	2f e3       	ldi	r18, 0x3F	; 63
 18a:	32 e4       	ldi	r19, 0x42	; 66
 18c:	8f e0       	ldi	r24, 0x0F	; 15
 18e:	21 50       	subi	r18, 0x01	; 1
 190:	30 40       	sbci	r19, 0x00	; 0
 192:	80 40       	sbci	r24, 0x00	; 0
 194:	e1 f7       	brne	.-8      	; 0x18e <flash_led_short+0x34>
 196:	00 c0       	rjmp	.+0      	; 0x198 <flash_led_short+0x3e>
 198:	00 00       	nop
 19a:	15 b8       	out	0x05, r1	; 5
 19c:	9f e3       	ldi	r25, 0x3F	; 63
 19e:	22 e4       	ldi	r18, 0x42	; 66
 1a0:	3f e0       	ldi	r19, 0x0F	; 15
 1a2:	91 50       	subi	r25, 0x01	; 1
 1a4:	20 40       	sbci	r18, 0x00	; 0
 1a6:	30 40       	sbci	r19, 0x00	; 0
 1a8:	e1 f7       	brne	.-8      	; 0x1a2 <flash_led_short+0x48>
 1aa:	00 c0       	rjmp	.+0      	; 0x1ac <flash_led_short+0x52>
 1ac:	00 00       	nop
 1ae:	08 95       	ret

000001b0 <add_turn_move>:
 1b0:	80 ff       	sbrs	r24, 0
 1b2:	0e c0       	rjmp	.+28     	; 0x1d0 <add_turn_move+0x20>
 1b4:	45 2b       	or	r20, r21
 1b6:	31 f4       	brne	.+12     	; 0x1c4 <add_turn_move+0x14>
 1b8:	61 e0       	ldi	r22, 0x01	; 1
 1ba:	70 e0       	ldi	r23, 0x00	; 0
 1bc:	80 e0       	ldi	r24, 0x00	; 0
 1be:	90 e0       	ldi	r25, 0x00	; 0
 1c0:	9e cf       	rjmp	.-196    	; 0xfe <add_move>
 1c2:	08 95       	ret
 1c4:	62 e0       	ldi	r22, 0x02	; 2
 1c6:	70 e0       	ldi	r23, 0x00	; 0
 1c8:	80 e0       	ldi	r24, 0x00	; 0
 1ca:	90 e0       	ldi	r25, 0x00	; 0
 1cc:	98 cf       	rjmp	.-208    	; 0xfe <add_move>
 1ce:	08 95       	ret
 1d0:	60 ff       	sbrs	r22, 0
 1d2:	0d c0       	rjmp	.+26     	; 0x1ee <add_turn_move+0x3e>
 1d4:	45 2b       	or	r20, r21
 1d6:	31 f4       	brne	.+12     	; 0x1e4 <add_turn_move+0x34>
 1d8:	60 e0       	ldi	r22, 0x00	; 0
 1da:	70 e1       	ldi	r23, 0x10	; 16
 1dc:	80 e0       	ldi	r24, 0x00	; 0
 1de:	90 e0       	ldi	r25, 0x00	; 0
 1e0:	8e cf       	rjmp	.-228    	; 0xfe <add_move>
 1e2:	08 95       	ret
 1e4:	60 e0       	ldi	r22, 0x00	; 0
 1e6:	70 e2       	ldi	r23, 0x20	; 32
 1e8:	80 e0       	ldi	r24, 0x00	; 0
 1ea:	90 e0       	ldi	r25, 0x00	; 0
 1ec:	88 cf       	rjmp	.-240    	; 0xfe <add_move>
 1ee:	08 95       	ret

000001f0 <collect_move>:
 1f0:	ac 01       	movw	r20, r24
 1f2:	14 b8       	out	0x04, r1	; 4
 1f4:	9a b1       	in	r25, 0x0a	; 10
 1f6:	9f 73       	andi	r25, 0x3F	; 63
 1f8:	9a b9       	out	0x0a, r25	; 10
 1fa:	89 b1       	in	r24, 0x09	; 9
 1fc:	80 7c       	andi	r24, 0xC0	; 192
 1fe:	63 b1       	in	r22, 0x03	; 3
 200:	6f 73       	andi	r22, 0x3F	; 63
 202:	81 11       	cpse	r24, r1
 204:	01 c0       	rjmp	.+2      	; 0x208 <collect_move+0x18>
 206:	c9 f3       	breq	.-14     	; 0x1fa <collect_move+0xa>
 208:	d3 cf       	rjmp	.-90     	; 0x1b0 <add_turn_move>
 20a:	08 95       	ret

0000020c <main>:

int main (void)
{
	/* Insert system clock initialization code here (sysclk_init()). */

	board_init();	
 20c:	6f df       	rcall	.-290    	; 0xec <board_init>
	
		flash_led_short();
 20e:	a5 df       	rcall	.-182    	; 0x15a <flash_led_short>
 210:	80 e0       	ldi	r24, 0x00	; 0

	//launch_game();
	
	collect_move(0);
 212:	90 e0       	ldi	r25, 0x00	; 0
 214:	ed df       	rcall	.-38     	; 0x1f0 <collect_move>
 216:	80 e0       	ldi	r24, 0x00	; 0
	
}
 218:	90 e0       	ldi	r25, 0x00	; 0
 21a:	08 95       	ret

0000021c <_exit>:
 21c:	f8 94       	cli

0000021e <__stop_program>:
 21e:	ff cf       	rjmp	.-2      	; 0x21e <__stop_program>
